"use strict";(()=>{var e={};e.id=651,e.ids=[651],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},1757:(e,r,a)=>{a.r(r),a.d(r,{headerHooks:()=>f,originalPathname:()=>q,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>c,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>m});var t={};a.r(t),a.d(t,{POST:()=>POST});var o=a(884),u=a(6132),i=a(5798),s=a(7147),n=a(1017);async function POST(e){try{let r=await e.formData(),a=r.get("file");if(!a)return i.Z.json({error:"No file uploaded"},{status:400});if(!a.name.endsWith(".parquet"))return i.Z.json({error:"Only Parquet files are allowed"},{status:400});let t=(0,n.join)(process.cwd(),"data");(0,s.mkdirSync)(t,{recursive:!0});let o=Buffer.from(await a.arrayBuffer()),u=(0,n.join)(t,a.name);return(0,s.writeFileSync)(u,o),i.Z.json({message:"File uploaded successfully",filename:a.name,path:u})}catch(e){return console.error("Error uploading Parquet file:",e),i.Z.json({error:"Failed to upload file"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:u.x.APP_ROUTE,page:"/api/upload/parquet/route",pathname:"/api/upload/parquet",filename:"route",bundlePath:"app/api/upload/parquet/route"},resolvedPagePath:"/Users/dhiraja/Documents/Projects/backroom/app/api/upload/parquet/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:c,headerHooks:f,staticGenerationBailout:m}=p,q="/api/upload/parquet/route"}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),a=r.X(0,[997],()=>__webpack_exec__(1757));module.exports=a})();